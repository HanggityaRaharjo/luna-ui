@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --neutral: 30, 31, 56;
  --default: 30, 31, 56;
  --primary: 60, 114, 168;
  --secondary: 226, 255, 175;
  --accent: 247, 188, 51;
  --light: 252, 252, 253;

  --info: 88, 173, 213;
  --success: 56, 229, 140;
  --warning: 244, 192, 62;
  --error: 226, 54, 57;

  --content-primary: rgb(217, 225, 237);
  --content-secondary: rgb(45, 50, 21);
  --content-accent: rgb(47, 37, 19);
  --content-info: rgb(25, 36, 42);
  --content-success: rgb(23, 44, 30);
  --content-warning: rgb(46, 38, 20);
  --content-error: rgb(255, 220, 214);
}
.btn {
  --btn-color: #fff;
  --btn-bg: rgb(var(--default));
  --btn-border-color: rgb(var(--default));
  --btn-hover-bg: rgba(var(--default), 0.5);
  --btn-hover-border-color: rgb(var(--default));
  text-transform: uppercase;
  border-width: 1px;
  border-color: var(--btn-border-color);
  height: fit-content;
  min-height: 1.5rem;
  min-width: 1.5rem;
  width: fit-content;
  border-radius: 0.5rem;
  background-color: var(--btn-bg);
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.25rem;
  transition:
    background,
    border 0.2s;
  color: var(--btn-color);
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}
.btn:hover {
  background-color: var(--btn-hover-bg);
  transition: background 0.3s;
  border-color: transparent;
}
.btn:active {
  transform: scale(90%);
  transition:
    background,
    transform 0.2s;
}
.btn-primary {
  --btn-color: var(--content-primary);
  --btn-bg: rgb(var(--primary));
  --btn-border-color: rgb(var(--primary));
  --btn-hover-bg: rgba(var(--primary), 0.5);
  --btn-hover-border-color: rgb(var(--primary));
}

.btn-secondary {
  --btn-color: var(--content-secondary);
  --btn-bg: rgb(var(--secondary));
  --btn-border-color: rgb(var(--secondary));
  --btn-hover-bg: rgba(var(--secondary), 0.5);
  --btn-hover-border-color: rgb(var(--secondary));
}

.btn-accent {
  --btn-color: var(--content-accent);
  --btn-bg: rgb(var(--accent));
  --btn-border-color: rgb(var(--accent));
  --btn-hover-bg: rgba(var(--accent), 0.5);
  --btn-hover-border-color: rgb(var(--accent));
}

.btn-success {
  --btn-color: var(--content-success);
  --btn-bg: rgb(var(--success));
  --btn-border-color: rgb(var(--success));
  --btn-hover-bg: rgba(var(--success), 0.5);
  --btn-hover-border-color: rgb(var(--success));
}

.btn-info {
  --btn-color: var(--content-info);
  --btn-bg: rgb(var(--info));
  --btn-border-color: rgb(var(--info));
  --btn-hover-bg: rgba(var(--info), 0.5);
  --btn-hover-border-color: rgb(var(--info));
}

.btn-warning {
  --btn-color: var(--content-warning);
  --btn-bg: rgb(var(--warning));
  --btn-border-color: rgb(var(--warning));
  --btn-hover-bg: rgba(var(--warning), 0.5);
  --btn-hover-border-color: rgb(var(--warning));
}

.btn-error {
  --btn-color: var(--content-error);
  --btn-bg: rgb(var(--error));
  --btn-border-color: rgb(var(--error));
  --btn-hover-bg: rgba(var(--error), 0.5);
  --btn-hover-border-color: rgb(var(--error));
}

.btn-light {
  --btn-color: var(--content-light);
  --btn-bg: rgb(var(--light));
  --btn-border-color: rgb(var(--light));
  --btn-hover-bg: rgba(var(--light), 0.5);
  --btn-hover-border-color: rgb(var(--light));
}

.btn-outline {
  border-color: var(--btn-bg);
  background-color: transparent;
  color: var(--btn-bg);
}
.btn-lg {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  min-height: 3.5rem;
  font-size: 1.125rem;
}
.btn-sm {
  padding-left: 1rem;
  padding-right: 1rem;
  min-width: 4rem;
  min-height: 1.25rem;
  font-size: 11px;
}
.btn-wide {
  min-width: 16rem;
}
/* Card */
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: 1rem;
}
.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}
.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}
.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}
figure,
p,
pre {
  margin: 0;
}
.card-body {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  padding: var(--padding-card, 2rem);
  gap: 0.5rem;
}
.card-title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
}
.card-body :where(p) {
  flex-grow: 1;
}
.card-actions {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 0.5rem;
}
/* End Card */
/*   Badge */
.badge {
  --badge-color: #fff;
  --badge-bg: transparent;
  --badge-border-color: #fff;
  text-transform: uppercase;
  border-width: 1px;
  height: -moz-fit-content;
  height: fit-content;
  width: -moz-fit-content;
  width: fit-content;
  font-size: 0.7rem;
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 0.563rem;
  padding-right: 0.563rem;
  border-radius: 100px;
  background-color: var(--badge-bg);
  color: var(--badge-color);
  border-color: var(--badge-border-color);
}

.badge-primary {
  --badge-color: var(--content-primary);
  --badge-bg: rgb(var(--primary));
  --badge-border-color: rgb(var(--primary));
}
.badge-secondary {
  --badge-color: var(--content-secondary);
  --badge-bg: rgb(var(--secondary));
  --badge-border-color: rgb(var(--secondary));
}
.badge-accent {
  --badge-color: var(--content-accent);
  --badge-bg: rgb(var(--accent));
  --badge-border-color: rgb(var(--accent));
}
.badge-light {
  --badge-color: var(--content-light);
  --badge-bg: rgb(var(--light));
  --badge-border-color: rgb(var(--light));
}

.badge-info {
  --badge-color: var(--content-info);
  --badge-bg: rgb(var(--info));
  --badge-border-color: rgb(var(--info));
}
.badge-success {
  --badge-color: var(--content-success);
  --badge-bg: rgb(var(--success));
  --badge-border-color: rgb(var(--success));
}
.badge-warning {
  --badge-color: var(--content-warning);
  --badge-bg: rgb(var(--warning));
  --badge-border-color: rgb(var(--warning));
}
.badge-error {
  --badge-color: var(--content-error);
  --badge-bg: rgb(var(--error));
  --badge-border-color: rgb(var(--error));
}
.badge-outline {
  border-color: var(--badge-bg);
  background-color: transparent;
  color: var(--badge-bg);
}

/* Alert */
.alert {
  --luna-alert-text-color: #fff;
  --luna-alert-bg-color: transparent;
  --luna-alert-border-color: #fff;
  display: grid;
  width: 100%;
  grid-auto-flow: column;
  grid-template-columns: auto minmax(auto, 1fr);
  justify-items: start;
  text-align: left;
  gap: 1rem;
  border-width: 1px;
  padding: 1rem;
  border-radius: 1rem;
  border-color: var(--luna-alert-border-color);
  color: var(--luna-alert-text-color);
  background-color: var(--luna-alert-bg-color);
}

.alert-info {
  --luna-alert-text-color: var(--content-info);
  --luna-alert-bg-color: rgb(var(--info));
  --luna-alert-border-color: rgb(var(--info));
}
.alert-success {
  --luna-alert-text-color: var(--content-success);
  --luna-alert-bg-color: rgb(var(--success));
  --luna-alert-border-color: rgb(var(--success));
}
.alert-warning {
  --luna-alert-text-color: var(--content-warning);
  --luna-alert-bg-color: rgb(var(--warning));
  --luna-alert-border-color: rgb(var(--warning));
}
.alert-error {
  --luna-alert-text-color: var(--content-error);
  --luna-alert-bg-color: rgb(var(--error));
  --luna-alert-border-color: rgb(var(--error));
}
/* End Alert */

/* Navbar */
.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.5rem);
  min-height: 4rem;
  width: 100%;
}
/* End Navbar */

/* Toggle */
.toggle {
  flex-shrink: 0;
  --tglbg: white;
  --handleoffset: 1.5rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --togglehandleborder: 0 0;
  --togglebordercolor: rgb(var(--default));
  --dottogglecolor: rgb(var(--default));
  height: 1.5rem;
  width: 3rem;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-width: 1px;
  border-color: var(--togglebordercolor);
  background-color: var(--dottogglecolor);
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 1.9rem;
  box-shadow:
    var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset,
    var(--togglehandleborder);
}

.toggle:checked,
.toggle[checked="true"],
.toggle[aria-checked="true"] {
  --handleoffsetcalculator: 1.5rem;
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
}

.toggle-primary:checked,
.toggle-primary[checked="true"],
.toggle-primary[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--primary));
  --togglebordercolor: rgb(var(--primary));
}

.toggle-secondary:checked,
.toggle-secondary[checked="true"],
.toggle-secondary[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--secondary));
  --togglebordercolor: rgb(var(--secondary));
}

.toggle-accent:checked,
.toggle-accent[checked="true"],
.toggle-accent[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--accent));
  --togglebordercolor: rgb(var(--accent));
}

.toggle-info:checked,
.toggle-info[checked="true"],
.toggle-info[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--info));
  --togglebordercolor: rgb(var(--info));
}

.toggle-success:checked,
.toggle-success[checked="true"],
.toggle-success[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--success));
  --togglebordercolor: rgb(var(--success));
}

.toggle-warning:checked,
.toggle-warning[checked="true"],
.toggle-warning[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--warning));
  --togglebordercolor: rgb(var(--warning));
}

.toggle-error:checked,
.toggle-error[checked="true"],
.toggle-error[aria-checked="true"] {
  --tglbg: white;
  --dottogglecolor: rgb(var(--error));
  --togglebordercolor: rgb(var(--error));
}

/* End Toggle */
